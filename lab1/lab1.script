ÂëΩ‰ª§Á®øÂïüÂãïÊñº 2018Âπ¥03Êúà11Êó• ‰∏ãÂçà 11:37:04
]0;~
[32muser@DESKTOP-PLSUEOI [33m~[0m
$ whoami;pwd
user
/home/user
]0;~
[32muser@DESKTOP-PLSUEOI [33m~[0m
$ git config -l
user.email=jetjet888@gmail.com
user.name=jetjet888
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
core.ignorecase=true
remote.jetjet888.url=https://github.com/jetjet888/lab1.git
remote.jetjet888.fetch=+refs/heads/*:refs/remotes/jetjet888/*
remote.lab1.url=https://github.com/jetjet888/lab1.git
remote.lab1.fetch=+refs/heads/*:refs/remotes/lab1/*
]0;~
[32muser@DESKTOP-PLSUEOI [33m~[0m
$ git clone git clone https://github.com/jetjet888/lab1.git
fatal: Too many arguments.

usage: git clone [<options>] [--] <repo> [<dir>]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting
    -n, --no-checkout     don't create a checkout
    --bare                create a bare repository
    --mirror              create a mirror repository (implies bare)
    -l, --local           to clone from a local repository
    --no-hardlinks        don't use local hardlinks, always copy
    -s, --shared          setup as shared repository
    --recurse-submodules[=<pathspec>]
                          initialize submodules in the clone
    -j, --jobs <n>        number of submodules cloned in parallel
    --template <template-directory>
                          directory from which templates will be used
    --reference <repo>    reference repository
    --reference-if-able <repo>
                          reference repository
    --dissociate          use --reference only while cloning
    -o, --origin <name>   use <name> instead of 'origin' to track upstream
    -b, --branch <branch>
                          checkout <branch> instead of the remote's HEAD
    -u, --upload-pack <path>
                          path to git-upload-pack on the remote
    --depth <depth>       create a shallow clone of that depth
    --shallow-since <time>
                          create a shallow clone since a specific time
    --shallow-exclude <revision>
                          deepen history of shallow clone, excluding rev
    --single-branch       clone only one branch, HEAD or --branch
    --no-tags             don't clone any tags, and make later fetches not to follow them
    --shallow-submodules  any cloned submodules will be shallow
    --separate-git-dir <gitdir>
                          separate git dir from working tree
    -c, --config <key=value>
                          set config inside the new repository
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only

]0;~
[32muser@DESKTOP-PLSUEOI [33m~[0m
$ git clone https://github.com/jetjet888/lab1.git
Cloning into 'lab1'...
warning: You appear to have cloned an empty repository.
]0;~
[32muser@DESKTOP-PLSUEOI [33m~[0m
$ exit

ÂëΩ‰ª§Á®øÂ∑≤Êñº 2018Âπ¥03Êúà11Êó• ‰∏ãÂçà 11:38:07
 ÂÆåÊàê